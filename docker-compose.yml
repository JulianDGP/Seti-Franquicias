services:
  db:
    image: postgres:16-alpine
    container_name: seti-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-franquicias_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./deployment/db/init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    image: seti-franquicias:local
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-local}
      SPRING_R2DBC_URL: ${SPRING_R2DBC_URL:-r2dbc:postgresql://db:5432/franquicias_db}
      SPRING_R2DBC_USERNAME: ${SPRING_R2DBC_USERNAME:-postgres}
      SPRING_R2DBC_PASSWORD: ${SPRING_R2DBC_PASSWORD:-postgres}
      SPRING_R2DBC_PROPERTIES_SCHEMA: dbo
    ports:
      - "${APP_PORT:-8080}:8080"

volumes:
  db-data: {}
